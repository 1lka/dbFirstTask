<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<schema CATALOG_NAME="def" DEFAULT_CHARACTER_SET_NAME="utf8" DEFAULT_COLLATION_NAME="utf8_general_ci" SCHEMA_NAME="sakila" SQL_PATH="null">
  <views>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="NO" SECURITY_TYPE="INVOKER" TABLE_CATALOG="def" TABLE_NAME="actor_info" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `a`.`actor_id` AS `actor_id`,`a`.`first_name` AS `first_name`,`a`.`last_name` AS `last_name`,group_concat(distinct concat(`c`.`name`,': ',(select group_concat(`f`.`title` order by `f`.`title` ASC separator ', ') from ((`sakila`.`film` `f` join `sakila`.`film_category` `fc` on((`f`.`film_id` = `fc`.`film_id`))) join `sakila`.`film_actor` `fa` on((`f`.`film_id` = `fa`.`film_id`))) where ((`fc`.`category_id` = `c`.`category_id`) and (`fa`.`actor_id` = `a`.`actor_id`)))) order by `c`.`name` ASC separator '; ') AS `film_info` from (((`sakila`.`actor` `a` left join `sakila`.`film_actor` `fa` on((`a`.`actor_id` = `fa`.`actor_id`))) left join `sakila`.`film_category` `fc` on((`fa`.`film_id` = `fc`.`film_id`))) left join `sakila`.`category` `c` on((`fc`.`category_id` = `c`.`category_id`))) group by `a`.`actor_id`,`a`.`first_name`,`a`.`last_name`"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="YES" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="customer_list" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `cu`.`customer_id` AS `ID`,concat(`cu`.`first_name`,' ',`cu`.`last_name`) AS `name`,`a`.`address` AS `address`,`a`.`postal_code` AS `zip code`,`a`.`phone` AS `phone`,`sakila`.`city`.`city` AS `city`,`sakila`.`country`.`country` AS `country`,if(`cu`.`active`,'active','') AS `notes`,`cu`.`store_id` AS `SID` from (((`sakila`.`customer` `cu` join `sakila`.`address` `a` on((`cu`.`address_id` = `a`.`address_id`))) join `sakila`.`city` on((`a`.`city_id` = `sakila`.`city`.`city_id`))) join `sakila`.`country` on((`sakila`.`city`.`country_id` = `sakila`.`country`.`country_id`)))"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="NO" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="film_list" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `sakila`.`film`.`film_id` AS `FID`,`sakila`.`film`.`title` AS `title`,`sakila`.`film`.`description` AS `description`,`sakila`.`category`.`name` AS `category`,`sakila`.`film`.`rental_rate` AS `price`,`sakila`.`film`.`length` AS `length`,`sakila`.`film`.`rating` AS `rating`,group_concat(concat(`sakila`.`actor`.`first_name`,' ',`sakila`.`actor`.`last_name`) separator ', ') AS `actors` from ((((`sakila`.`category` left join `sakila`.`film_category` on((`sakila`.`category`.`category_id` = `sakila`.`film_category`.`category_id`))) left join `sakila`.`film` on((`sakila`.`film_category`.`film_id` = `sakila`.`film`.`film_id`))) join `sakila`.`film_actor` on((`sakila`.`film`.`film_id` = `sakila`.`film_actor`.`film_id`))) join `sakila`.`actor` on((`sakila`.`film_actor`.`actor_id` = `sakila`.`actor`.`actor_id`))) group by `sakila`.`film`.`film_id`,`sakila`.`category`.`name`"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="NO" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="nicer_but_slower_film_list" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `sakila`.`film`.`film_id` AS `FID`,`sakila`.`film`.`title` AS `title`,`sakila`.`film`.`description` AS `description`,`sakila`.`category`.`name` AS `category`,`sakila`.`film`.`rental_rate` AS `price`,`sakila`.`film`.`length` AS `length`,`sakila`.`film`.`rating` AS `rating`,group_concat(concat(concat(upper(substr(`sakila`.`actor`.`first_name`,1,1)),lower(substr(`sakila`.`actor`.`first_name`,2,length(`sakila`.`actor`.`first_name`))),' ',concat(upper(substr(`sakila`.`actor`.`last_name`,1,1)),lower(substr(`sakila`.`actor`.`last_name`,2,length(`sakila`.`actor`.`last_name`)))))) separator ', ') AS `actors` from ((((`sakila`.`category` left join `sakila`.`film_category` on((`sakila`.`category`.`category_id` = `sakila`.`film_category`.`category_id`))) left join `sakila`.`film` on((`sakila`.`film_category`.`film_id` = `sakila`.`film`.`film_id`))) join `sakila`.`film_actor` on((`sakila`.`film`.`film_id` = `sakila`.`film_actor`.`film_id`))) join `sakila`.`actor` on((`sakila`.`film_actor`.`actor_id` = `sakila`.`actor`.`actor_id`))) group by `sakila`.`film`.`film_id`,`sakila`.`category`.`name`"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="NO" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="sales_by_film_category" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `c`.`name` AS `category`,sum(`p`.`amount`) AS `total_sales` from (((((`sakila`.`payment` `p` join `sakila`.`rental` `r` on((`p`.`rental_id` = `r`.`rental_id`))) join `sakila`.`inventory` `i` on((`r`.`inventory_id` = `i`.`inventory_id`))) join `sakila`.`film` `f` on((`i`.`film_id` = `f`.`film_id`))) join `sakila`.`film_category` `fc` on((`f`.`film_id` = `fc`.`film_id`))) join `sakila`.`category` `c` on((`fc`.`category_id` = `c`.`category_id`))) group by `c`.`name` order by `total_sales` desc"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="NO" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="sales_by_store" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select concat(`c`.`city`,',',`cy`.`country`) AS `store`,concat(`m`.`first_name`,' ',`m`.`last_name`) AS `manager`,sum(`p`.`amount`) AS `total_sales` from (((((((`sakila`.`payment` `p` join `sakila`.`rental` `r` on((`p`.`rental_id` = `r`.`rental_id`))) join `sakila`.`inventory` `i` on((`r`.`inventory_id` = `i`.`inventory_id`))) join `sakila`.`store` `s` on((`i`.`store_id` = `s`.`store_id`))) join `sakila`.`address` `a` on((`s`.`address_id` = `a`.`address_id`))) join `sakila`.`city` `c` on((`a`.`city_id` = `c`.`city_id`))) join `sakila`.`country` `cy` on((`c`.`country_id` = `cy`.`country_id`))) join `sakila`.`staff` `m` on((`s`.`manager_staff_id` = `m`.`staff_id`))) group by `s`.`store_id` order by `cy`.`country`,`c`.`city`"/>
    <view CHARACTER_SET_CLIENT="utf8" CHECK_OPTION="NONE" COLLATION_CONNECTION="utf8_general_ci" DEFINER="root@localhost" IS_UPDATABLE="YES" SECURITY_TYPE="DEFINER" TABLE_CATALOG="def" TABLE_NAME="staff_list" TABLE_SCHEMA="sakila" VIEW_DEFINITION="select `s`.`staff_id` AS `ID`,concat(`s`.`first_name`,' ',`s`.`last_name`) AS `name`,`a`.`address` AS `address`,`a`.`postal_code` AS `zip code`,`a`.`phone` AS `phone`,`sakila`.`city`.`city` AS `city`,`sakila`.`country`.`country` AS `country`,`s`.`store_id` AS `SID` from (((`sakila`.`staff` `s` join `sakila`.`address` `a` on((`s`.`address_id` = `a`.`address_id`))) join `sakila`.`city` on((`a`.`city_id` = `sakila`.`city`.`city_id`))) join `sakila`.`country` on((`sakila`.`city`.`country_id` = `sakila`.`country`.`country_id`)))"/>
  </views>
  <routines>
    <procedures>
      <procedure CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="null" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="NO" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="null" NUMERIC_SCALE="null" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="" ROUTINE_DEFINITION="BEGIN&#10;     SELECT inventory_id&#10;     FROM inventory&#10;     WHERE film_id = p_film_id&#10;     AND store_id = p_store_id&#10;     AND inventory_in_stock(inventory_id);&#10;&#10;     SELECT FOUND_ROWS() INTO p_film_count;&#10;END" ROUTINE_NAME="film_in_stock" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="PROCEDURE" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="film_in_stock" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
      <procedure CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="null" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="NO" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="null" NUMERIC_SCALE="null" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="" ROUTINE_DEFINITION="BEGIN&#10;     SELECT inventory_id&#10;     FROM inventory&#10;     WHERE film_id = p_film_id&#10;     AND store_id = p_store_id&#10;     AND NOT inventory_in_stock(inventory_id);&#10;&#10;     SELECT FOUND_ROWS() INTO p_film_count;&#10;END" ROUTINE_NAME="film_not_in_stock" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="PROCEDURE" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="film_not_in_stock" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
      <procedure CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="null" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="NO" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="null" NUMERIC_SCALE="null" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="Provides a customizable report on best customers" ROUTINE_DEFINITION="proc: BEGIN&#10;&#10;    DECLARE last_month_start DATE;&#10;    DECLARE last_month_end DATE;&#10;&#10;    /* Some sanity checks... */&#10;    IF min_monthly_purchases = 0 THEN&#10;        SELECT 'Minimum monthly purchases parameter must be &gt; 0';&#10;        LEAVE proc;&#10;    END IF;&#10;    IF min_dollar_amount_purchased = 0.00 THEN&#10;        SELECT 'Minimum monthly dollar amount purchased parameter must be &gt; $0.00';&#10;        LEAVE proc;&#10;    END IF;&#10;&#10;    /* Determine start and end time periods */&#10;    SET last_month_start = DATE_SUB(CURRENT_DATE(), INTERVAL 1 MONTH);&#10;    SET last_month_start = STR_TO_DATE(CONCAT(YEAR(last_month_start),'-',MONTH(last_month_start),'-01'),'%Y-%m-%d');&#10;    SET last_month_end = LAST_DAY(last_month_start);&#10;&#10;    /*&#10;        Create a temporary storage area for&#10;        Customer IDs.&#10;    */&#10;    CREATE TEMPORARY TABLE tmpCustomer (customer_id SMALLINT UNSIGNED NOT NULL PRIMARY KEY);&#10;&#10;    /*&#10;        Find all customers meeting the&#10;        monthly purchase requirements&#10;    */&#10;    INSERT INTO tmpCustomer (customer_id)&#10;    SELECT p.customer_id&#10;    FROM payment AS p&#10;    WHERE DATE(p.payment_date) BETWEEN last_month_start AND last_month_end&#10;    GROUP BY customer_id&#10;    HAVING SUM(p.amount) &gt; min_dollar_amount_purchased&#10;    AND COUNT(customer_id) &gt; min_monthly_purchases;&#10;&#10;    /* Populate OUT parameter with count of found customers */&#10;    SELECT COUNT(*) FROM tmpCustomer INTO count_rewardees;&#10;&#10;    /*&#10;        Output ALL customer information of matching rewardees.&#10;        Customize output as needed.&#10;    */&#10;    SELECT c.*&#10;    FROM tmpCustomer AS t&#10;    INNER JOIN customer AS c ON t.customer_id = c.customer_id;&#10;&#10;    /* Clean up */&#10;    DROP TABLE tmpCustomer;&#10;END" ROUTINE_NAME="rewards_report" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="PROCEDURE" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="rewards_report" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
    </procedures>
    <functions>
      <function CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="decimal" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="decimal(5,2)" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="YES" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="5" NUMERIC_SCALE="2" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="" ROUTINE_DEFINITION="BEGIN&#10;&#10;       #OK, WE NEED TO CALCULATE THE CURRENT BALANCE GIVEN A CUSTOMER_ID AND A DATE&#10;       #THAT WE WANT THE BALANCE TO BE EFFECTIVE FOR. THE BALANCE IS:&#10;       #   1) RENTAL FEES FOR ALL PREVIOUS RENTALS&#10;       #   2) ONE DOLLAR FOR EVERY DAY THE PREVIOUS RENTALS ARE OVERDUE&#10;       #   3) IF A FILM IS MORE THAN RENTAL_DURATION * 2 OVERDUE, CHARGE THE REPLACEMENT_COST&#10;       #   4) SUBTRACT ALL PAYMENTS MADE BEFORE THE DATE SPECIFIED&#10;&#10;  DECLARE v_rentfees DECIMAL(5,2); #FEES PAID TO RENT THE VIDEOS INITIALLY&#10;  DECLARE v_overfees INTEGER;      #LATE FEES FOR PRIOR RENTALS&#10;  DECLARE v_payments DECIMAL(5,2); #SUM OF PAYMENTS MADE PREVIOUSLY&#10;&#10;  SELECT IFNULL(SUM(film.rental_rate),0) INTO v_rentfees&#10;    FROM film, inventory, rental&#10;    WHERE film.film_id = inventory.film_id&#10;      AND inventory.inventory_id = rental.inventory_id&#10;      AND rental.rental_date &lt;= p_effective_date&#10;      AND rental.customer_id = p_customer_id;&#10;&#10;  SELECT IFNULL(SUM(IF((TO_DAYS(rental.return_date) - TO_DAYS(rental.rental_date)) &gt; film.rental_duration,&#10;        ((TO_DAYS(rental.return_date) - TO_DAYS(rental.rental_date)) - film.rental_duration),0)),0) INTO v_overfees&#10;    FROM rental, inventory, film&#10;    WHERE film.film_id = inventory.film_id&#10;      AND inventory.inventory_id = rental.inventory_id&#10;      AND rental.rental_date &lt;= p_effective_date&#10;      AND rental.customer_id = p_customer_id;&#10;&#10;&#10;  SELECT IFNULL(SUM(payment.amount),0) INTO v_payments&#10;    FROM payment&#10;&#10;    WHERE payment.payment_date &lt;= p_effective_date&#10;    AND payment.customer_id = p_customer_id;&#10;&#10;  RETURN v_rentfees + v_overfees - v_payments;&#10;END" ROUTINE_NAME="get_customer_balance" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="FUNCTION" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="get_customer_balance" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
      <function CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="int" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="int(11)" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="NO" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="10" NUMERIC_SCALE="0" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="" ROUTINE_DEFINITION="BEGIN&#10;  DECLARE v_customer_id INT;&#10;  DECLARE EXIT HANDLER FOR NOT FOUND RETURN NULL;&#10;&#10;  SELECT customer_id INTO v_customer_id&#10;  FROM rental&#10;  WHERE return_date IS NULL&#10;  AND inventory_id = p_inventory_id;&#10;&#10;  RETURN v_customer_id;&#10;END" ROUTINE_NAME="inventory_held_by_customer" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="FUNCTION" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="inventory_held_by_customer" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
      <function CHARACTER_MAXIMUM_LENGTH="null" CHARACTER_OCTET_LENGTH="null" CHARACTER_SET_CLIENT="utf8" CHARACTER_SET_NAME="null" COLLATION_CONNECTION="utf8_general_ci" COLLATION_NAME="null" CREATED="2018-02-05 14:47:10.0" DATABASE_COLLATION="utf8_general_ci" DATA_TYPE="tinyint" DATETIME_PRECISION="null" DEFINER="root@localhost" DTD_IDENTIFIER="tinyint(1)" EXTERNAL_LANGUAGE="null" EXTERNAL_NAME="null" IS_DETERMINISTIC="NO" LAST_ALTERED="2018-02-05 14:47:10.0" NUMERIC_PRECISION="3" NUMERIC_SCALE="0" PARAMETER_STYLE="SQL" ROUTINE_BODY="SQL" ROUTINE_CATALOG="def" ROUTINE_COMMENT="" ROUTINE_DEFINITION="BEGIN&#10;    DECLARE v_rentals INT;&#10;    DECLARE v_out     INT;&#10;&#10;    #AN ITEM IS IN-STOCK IF THERE ARE EITHER NO ROWS IN THE rental TABLE&#10;    #FOR THE ITEM OR ALL ROWS HAVE return_date POPULATED&#10;&#10;    SELECT COUNT(*) INTO v_rentals&#10;    FROM rental&#10;    WHERE inventory_id = p_inventory_id;&#10;&#10;    IF v_rentals = 0 THEN&#10;      RETURN TRUE;&#10;    END IF;&#10;&#10;    SELECT COUNT(rental_id) INTO v_out&#10;    FROM inventory LEFT JOIN rental USING(inventory_id)&#10;    WHERE inventory.inventory_id = p_inventory_id&#10;    AND rental.return_date IS NULL;&#10;&#10;    IF v_out &gt; 0 THEN&#10;      RETURN FALSE;&#10;    ELSE&#10;      RETURN TRUE;&#10;    END IF;&#10;END" ROUTINE_NAME="inventory_in_stock" ROUTINE_SCHEMA="sakila" ROUTINE_TYPE="FUNCTION" SECURITY_TYPE="DEFINER" SPECIFIC_NAME="inventory_in_stock" SQL_DATA_ACCESS="READS SQL DATA" SQL_MODE="STRICT_TRANS_TABLES,STRICT_ALL_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,TRADITIONAL,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION" SQL_PATH="null"/>
    </functions>
  </routines>
  <tables>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:01.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="16384" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="actor" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:02.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="32768" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="address" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:02.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="0" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="category" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:02.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="16384" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="city" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:02.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="0" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="country" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:03.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="49152" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="customer" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:03.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="49152" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="film" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="null" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:03.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="16384" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="film_actor" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="null" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:04.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="16384" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="film_category" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="null" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:04.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="32768" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="film_text" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:07.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="32768" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="inventory" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:07.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="0" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="language" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:08.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="49152" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="payment" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:08.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="65536" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="rental" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:08.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="32768" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="staff" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
    <table AUTO_INCREMENT="1" AVG_ROW_LENGTH="0" CHECKSUM="null" CHECK_TIME="null" CREATE_OPTIONS="" CREATE_TIME="2018-02-05 14:47:09.0" DATA_FREE="0" DATA_LENGTH="16384" ENGINE="InnoDB" INDEX_LENGTH="32768" MAX_DATA_LENGTH="0" ROW_FORMAT="Dynamic" TABLE_CATALOG="def" TABLE_COLLATION="utf8_general_ci" TABLE_COMMENT="" TABLE_NAME="store" TABLE_ROWS="0" TABLE_SCHEMA="sakila" TABLE_TYPE="BASE TABLE" UPDATE_TIME="null" VERSION="10"/>
  </tables>
</schema>
